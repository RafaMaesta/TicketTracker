Dim statusExcluir As Boolean
Dim op As String
Dim produto() As String
Dim header As String
Dim listSize As Integer

Private Sub cmbDescricao_AfterUpdate()
    cmbMarca.Value = getData("BD", "t_Produto", "Marca", cmbDescricao.Value, "Descricao")
    txtCodProd.Value = getData("BD", "t_Produto", "Cod_Barras", cmbDescricao.Value, "Descricao")
    lblPreco.Caption = Format(getData("BD", "t_Produto", "Preco_venda", cmbDescricao.Value, "Descricao"), "currency")
    lblPreco.Caption = IIf(lblPreco.Caption = Empty, "R$ 0,00", lblPreco.Caption)
    txtQtd.TabIndex = cmbDescricao.TabIndex + 1
    txtQtd.SetFocus
End Sub

Private Sub cmbMarca_AfterUpdate()
    cmbDescricao.list = fillCombo("BD", "t_Produto", "Descricao", cmbMarca.Value, "Marca")
End Sub

Private Sub txtCodProd_AfterUpdate()
    cmbMarca.Value = getData("BD", "t_Produto", "Marca", txtCodProd.Value, "Cod_Barras")
    cmbDescricao.Value = getData("BD", "t_Produto", "Descricao", txtCodProd.Value, "Cod_Barras")
    lblPreco.Caption = Format(getData("BD", "t_Produto", "Preco_Venda", txtCodProd.Value, "Cod_Barras"), "currency")
    lblPreco.Caption = IIf(lblPreco.Caption = Empty, "R$ 0,00", lblPreco.Caption)
    txtQtd.TabIndex = txtCodProd.TabIndex + 1
    txtQtd.SetFocus
    If cmbMarca.Value = Empty Then cmbMarca.SetFocus
End Sub

Private Sub UserForm_Activate()
    header = "Cód. Barras | Descrição | Preço | Qtd | % | R$ | Subtotal"
    statusExcluir = False
    grpExcluir.Visible = statusExcluir
    lstItems.addItem header
    op = "Add"
    txtQtd.Value = "1"
    cmbMarca.list = fillCombo("BD", "t_Marca", "Marca")
    cmbDescricao.list = fillCombo("BD", "t_Produto", "Descricao")
End Sub

Private Sub txtCodProd_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub cmbMarca_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub cmbDescricao_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub txtQtd_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub txtDeleteProd_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub txtDeletar_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub txtDescDinheiro_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub txtDescPorcentagem_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    shortcut KeyCode
End Sub

Private Sub txtDescDinheiro_Change()
    If txtDescDinheiro.Value <> Empty _
    And txtDescDinheiro.Value <> 0 Then txtDescPorcentagem.Value = 0
End Sub

Private Sub txtDescPorcentagem_Change()
    If txtDescPorcentagem.Value <> Empty _
    And txtDescPorcentagem.Value <> 0 Then txtDescDinheiro.Value = 0
End Sub

Sub headerList()

End Sub

Sub shortcut(ByVal KeyCode As MSForms.ReturnInteger)
    Select Case KeyCode
        Case 112    'F1 Add/Remove item
                Select Case op
                    Case "Add"
                        If lblPreco.Caption = "R$ 0,00" Then Exit Sub
                        addItem
                        calcTotal
                        
                    Case "Remove"
                        If UCase(txtDeletar.Value) <> "DELETAR" Then Exit Sub
                        removeItem
                        calcTotal
                        switchRemove
                End Select
            
        Case 113    'F2 Finalizar Venda
            If lstItems.ListCount = 1 Then Exit Sub
            finalizarVenda
            frmFinalizarVenda.Show
            Erase listaProduto, produto
            lstItems.Clear
            lstItems.addItem header
        Case 114    'F3 Excluir Item
            switchRemove
    End Select
End Sub

Sub switchRemove()
    statusExcluir = Not statusExcluir
    grpExcluir.Visible = statusExcluir
    op = IIf(op = "Remove", "Add", "Remove")
    If statusExcluir Then txtDeleteProd.SetFocus
End Sub

Sub addItem()
    
    Dim listItem() As String
    Dim listRow As String
    
    qtd = getData("BD", "t_Produto", "Qtd", txtCodProd.Value, "Cod_Barras")
    If CInt(qtd) < txtQtd.Value Then
        MsgBox "Quantidade desejada é maior que quantidade em estoque"
        Exit Sub
    End If
    
    listSize = lstItems.ListCount                       'Pega tamanho da lista
    ReDim produto(6, 0 To listSize - 1)                     'Altera tamanho do array para caber itens ja cadastrados mais uma linha
    
    For i = 0 To listSize - 1
        If i < listSize And i <> 0 Then                 'Pega valores ja cadastrados linha < tamanho da lista e linha <> header
            listItem = Split(lstItems.list(i), " | ")   'Divide linha da lista em um array com o sepadador " | "
            produto(0, i) = listItem(0)
            produto(1, i) = listItem(1)
            produto(2, i) = listItem(2)
            produto(3, i) = listItem(3)
            produto(4, i) = listItem(4)
            produto(5, i) = listItem(5)
            produto(6, i) = listItem(6)
        Else                                            'Pega informações do novo item
            produto(0, i) = txtCodProd.Value
            produto(1, i) = cmbDescricao.Value
            produto(2, i) = lblPreco.Caption
            produto(3, i) = txtQtd.Value
            produto(4, i) = txtDescPorcentagem.Value
            produto(5, i) = txtDescDinheiro.Value
            produto(6, i) = CStr(calcItemTotal(CCur(lblPreco.Caption), CInt(txtQtd.Value), CDbl(txtDescPorcentagem.Value), CDbl(txtDescDinheiro.Value)))
        End If
    Next i
    
    lstItems.Clear                                      'Limpa lista
    For i = 0 To listSize
        If i = 0 Then
            listRow = header
        Else
            listRow = produto(0, i - 1) & " | " _
                    & produto(1, i - 1) & " | " _
                    & produto(2, i - 1) & " | " _
                    & produto(3, i - 1) & " | " _
                    & produto(4, i - 1) & " | " _
                    & produto(5, i - 1) & " | " _
                    & Format(produto(6, i - 1), "currency")   'Cria nova linha de items para add na lista -> valores separados pelo delimitador " | "
        End If
            lstItems.addItem listRow                        'Add linha à lista
            
    Next i
    txtCodProd.Value = ""
    cmbMarca.Value = ""
    cmbDescricao.Value = ""
    txtQtd.Value = "1"
    txtDescPorcentagem.Value = "0"
    txtDescDinheiro.Value = "0"
    txtCodProd.SetFocus
    lblPreco.Caption = "R$ 0,00"
End Sub

Function calcItemTotal(preco As Currency, qtd As Integer, descPorcentagem As Double, descDinheiro As Double) As Double
    Dim subtotal As Double
    If descPorcentagem <> 0 Then
        descPorcentagem = descPorcentagem / 100
        subtotal = preco * (1 - descPorcentagem)
        subtotal = subtotal * qtd
    ElseIf descDinheiro <> 0 Then
        subtotal = (preco - descDinheiro) * qtd
    Else
        subtotal = preco * qtd
    End If
    calcItemTotal = subtotal
End Function

Sub calcTotal()
    Dim total As Currency
    Dim listItem() As String
    listSize = lstItems.ListCount
    For i = 1 To listSize - 1
        listItem = Split(lstItems.list(i), " | ") 'Divide linha da lista em um array com o sepadador " | "
        total = total + CDbl(listItem(6))
    Next i
    lblSubtotal.Caption = Format(total, "currency")
End Sub

Sub removeItem()
    Dim listItem() As String
    Dim list() As String
    Dim j As Integer
    j = 0
    ReDim list(j)
    listSize = lstItems.ListCount
    For i = 1 To listSize - 1
        listItem = Split(lstItems.list(i), " | ") 'Divide linha da lista em um array com o sepadador " | "
        If listItem(0) <> txtDeleteProd.Value Then
            If i < listSize And list(j) <> "" Then
                j = j + 1
                ReDim Preserve list(0 To j)
            End If
            list(j) = lstItems.list(i)
        Else
            If j > 0 Then
                j = j - 1
                ReDim Preserve list(0 To j)
            End If
        End If
    Next i
    lstItems.Clear
    For i = 0 To j + 1
        If i = 0 Then
            lstItems.addItem header
        Else
            If list(0) <> "" Then lstItems.addItem list(i - 1)
        End If
    Next i
End Sub

Sub finalizarVenda()
    Dim listItem() As String
    listSize = lstItems.ListCount
    ReDim listaProduto(6, 0 To listSize - 2)
    For i = 1 To listSize - 1
        listItem = Split(lstItems.list(i), " | ") 'Divide linha da lista em um array com o sepadador " | "
        listaProduto(0, i - 1) = listItem(0)
        listaProduto(1, i - 1) = listItem(1)
        listaProduto(2, i - 1) = listItem(2)
        listaProduto(3, i - 1) = listItem(3)
        listaProduto(4, i - 1) = listItem(4)
        listaProduto(5, i - 1) = listItem(5)
        listaProduto(6, i - 1) = listItem(6)
    Next i
    totalVenda = lblSubtotal.Caption
End Sub


